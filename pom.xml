<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>janusky</groupId>
	<artifactId>publisher-http-s3</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>publisher-http-s3</name>
	<description>Web that allows uploading a file in S3 (ceph) and publishing metadata in Kafka</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.4.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<scm>
		<connection>scm:git:git://git@github.com:janusky/publisher-http-s3.git</connection>
		<developerConnection>scm:git:git@github.com:janusky/publisher-http-s3.git</developerConnection>
		<url>https://github.com/janusky/publisher-http-s3</url>
		<tag>HEAD</tag>
	</scm>

	<properties>
		<java.version>8</java.version>
		<skipTests>true</skipTests>
		
		<aws-java-sdk.version>1.11.534</aws-java-sdk.version>

		<!--FIX Unknown error (Error del plugin M2Eclipse)
			Solve https://stackoverflow.com/questions/56142369/why-am-i-getting-unknown-error-in-line-1-of-pom-xml/56275263			  
		-->
		<maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- HttpClient S3 y Producer -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk</artifactId>
            <version>${aws-java-sdk.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>1</version>
        </dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
			<!--<version>${micrometer.version}</version> -->
    	</dependency>

		<!-- TEST -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!--JUnit 5 (${junit-jupiter.version} 5.5.2) 
			Solve error (no test found with test runner). Adding manually JUnit5 
			in run configuration for the 'test unit'. 

			https://www.baeldung.com/junit-tests-run-programmatically-from-java
			https://howtodoinjava.com/junit5/execute-testcase-eclipse/
		-->	
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-runner</artifactId>
            <scope>test</scope>
        </dependency>
	</dependencies>

	<build>
		<!-- FIXME 20200413 https://github.com/wrporter/lombok-aspectj 
		<sourceDirectory>${project.build.directory}/generated-sources/delombok</sourceDirectory>
		-->
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludeDevtools>true</excludeDevtools>
					<executable>false</executable> <!-- If the nexus maven repo doesn't allow executables -->
				</configuration>
				<executions>
					<!--Spring Boot Actuator displays build-related information
              			if a META-INF/build-info.properties file is present -->
					<execution>
						<goals>
							<goal>build-info</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<!--Used to assemble the project into a deliverable (2.5.3) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>templates</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/assembly/descriptor.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- FIXME 20200413 See if necessary (1.18.12.0)
			<plugin>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>delombok</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <addOutputDirectory>false</addOutputDirectory>
                    <sourceDirectory>src/main/java</sourceDirectory>
                </configuration>
            </plugin>-->
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5.3</version>
					<configuration>
						<tagNameFormat>v@{project.version}</tagNameFormat>
						<arguments>-DskipTests</arguments>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<!-- ${user.home}/.m2/settings.xml -->
	<repositories>
		<repository>
			<id>repo1</id>
			<url>https://repo1.maven.org/maven2/</url>
		</repository>
		<repository>
			<id>mvnrepo</id>
			<url>https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-maven-plugin</url>
		</repository>
		<repository>
			<id>central</id>
			<name>libs-release</name>
			<url>https://repo.spring.io/libs-release</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>snapshots</id>
			<name>libs-snapshot</name>
			<url>https://repo.spring.io/libs-snapshot</url>
			<snapshots />
		</repository>
		<repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>repo1</id>
			<url>https://repo1.maven.org/maven2/</url>
		</pluginRepository>
		<pluginRepository>
			<id>central</id>
			<name>release</name>
			<url>https://repo.spring.io/release</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>snapshots</id>
			<name>snapshot</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots />
		</pluginRepository>
	</pluginRepositories>

	<distributionManagement>
		<repository>
			<id>nexus.prod</id>
			<url>https://nexus.server/nexus/repository/sandbox-maven/
			</url>
		</repository>
		<snapshotRepository>
			<id>nexus.prod</id>
			<url>https://nexus.server/nexus/repository/sandbox-maven-snapshots/
			</url>
		</snapshotRepository>
	</distributionManagement>
</project>
